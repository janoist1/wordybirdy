{"version":3,"sources":["utils/readFileInput.js","db.js","utils/shuffle.js","api.js","components/App/AppContext.js","components/Dictionary.jsx","components/Mode/ChallengeMode.jsx","components/Giphy.jsx","components/Mode/FreeMode.jsx","components/WordsList.jsx","components/App/App.js","components/App/index.js","serviceWorker.js","index.js","../node_modules/@giphy/js-brand/dist sync"],"names":["file","Promise","resolve","reject","reader","FileReader","readAsText","onload","target","result","onerror","db","PouchDB","getAll","allDocs","include_docs","descending","then","rows","map","doc","get","id","create","word","put","_id","uuid","generate","progress","en","hu","update","remove","_rev","truncate","a","all","row","value","rev","array","i","length","j","Math","floor","random","fetchWord","dictionary","fetch","r","json","AppContext","React","createContext","displayName","withAppContext","Component","props","Consumer","appContext","ls","loadDictionary","result_code","tasks","results","reduce","console","log","useState","setDictionary","useEffect","subscribed","setLoading","className","assoc_word_ex","example","key","getIds","words","ChallengeMode","lang","setWords","idsLeft","setIdsLeft","pointer","setPointer","miss","setMiss","visible","setVisible","makeProgress","handleNext","handleShow","shuffle","wordsSliced","slice","ids","find","href","onClick","currentId","filter","giphyFetch","GiphyFetch","gif","setGif","gifs","setGifs","change","setChange","searchGifs","offset","limit","search","data","handleChangeClick","useAsync","giphyId","width","images","src","fixed_height","webp","FreeMode","level","setLevel","giphy","setGiphy","min","Number","MAX_SAFE_INTEGER","calculateLevel","getIdsShuffeled","updateWordDebounced","callback","wait","immediate","timeout","callNow","next","apply","arguments","clearTimeout","setTimeout","debounce","rest","getWords","b","sort","wordDefault","WordsList","defaultFilter","setWord","setFilter","handleAddClick","handleWordChange","handleWordListChange","handleRemoveClick","type","onChange","indexOf","rebuildWords","Angol","Magyar","WordsRebuild","onDone","useRef","handleSelect","files","readFile","content","Papa","parse","header","ref","current","click","Home","to","App","loading","Provider","basename","path","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","webpackEmptyContext","req","e","Error","code","keys","module","exports"],"mappings":"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","file":"static/js/main.4f9a7c5f.chunk.js","sourcesContent":["export default file =>\n  new Promise((resolve, reject) => {\n    const reader = new FileReader()\n\n    reader.readAsText(file, 'UTF-8')\n    reader.onload = ({ target }) => resolve(target.result)\n    reader.onerror = reject\n  })\n","import PouchDB from 'pouchdb'\nimport uuid from 'short-uuid'\n\nconst db = new PouchDB('words')\n\nexport default db\n\nexport const getAll = () => db\n  .allDocs({ include_docs: true, descending: true })\n  .then(({ rows }) => rows)\n  .then(rows => rows.map(({ doc }) => doc))\n\nexport const get = id => db.get(id)\n\nexport const create = word => db.put({\n  _id: uuid.generate(), //new Date().toISOString(),\n  progress: {\n    en: 0,\n    hu: 0,\n  },\n  ...word,\n})\n\nexport const update = word => db.put(word)\n\nexport const remove = ({ _id, _rev }) => db.remove(_id, _rev)\n\nexport const truncate = async () => {\n  const { rows } = await db.allDocs({})\n\n  return Promise.all(rows.map(row =>\n    db.remove(row.id, row.value.rev)\n  ))\n}\n","export default array => {\n  for (let i = array.length - 1; i > 0; i--) {\n    const j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n}\n","const API_URL = 'https://twinword-word-graph-dictionary.p.rapidapi.com'\nconst API_KEY = '0e8aa254b7msh158b791c303788fp13a822jsn0c9b884e6326'\n\nexport const fetchWord = (word, dictionary) => fetch(`${API_URL}/${dictionary}/?entry=${word}`, {\n  'method': 'GET',\n  'headers': {\n    'x-rapidapi-host': 'twinword-word-graph-dictionary.p.rapidapi.com',\n    'x-rapidapi-key': API_KEY,\n  },\n}).then(r => r.json())\n","import React from 'react'\n\nconst AppContext = React.createContext({})\n\nAppContext.displayName = 'AppContext'\n\nexport default AppContext\n\nexport const withAppContext = Component => props =>\n  <AppContext.Consumer>\n    {appContext => <Component {...{ ...props, appContext }} />}\n  </AppContext.Consumer>\n","import React, { useState, useEffect } from 'react'\nimport ls from 'local-storage'\nimport { fetchWord } from '../api'\nimport { withAppContext } from './App/AppContext'\n\nif (!ls('dictionary')) {\n  ls('dictionary', {})\n}\n\nconst loadDictionary = async ({ en }) => {\n  let { [en]: dictionary } = ls('dictionary')\n\n  if (!dictionary || +dictionary.result_code !== 200) {\n    try {\n      const dictionaries = ['association', 'example']\n      const tasks = dictionaries.map(dictionary => fetchWord(en, dictionary))\n      const results = await Promise.all(tasks)\n\n      dictionary = results.reduce((dictionary, result) => ({\n        ...dictionary,\n        ...result,\n      }))\n\n      ls('dictionary', {\n        ...ls('dictionary'),\n        [en]: dictionary,\n      })\n    } catch (err) {\n      console.log('Error loading dictionary:', err)\n    }\n  }\n\n  return dictionary\n}\n\nconst Dictionary = ({ word, appContext }) => {\n  const [dictionary, setDictionary] = useState()\n\n  useEffect(() => {\n    let subscribed = true\n\n    appContext.setLoading(true)\n\n    loadDictionary(word).then(dictionary => {\n      appContext.setLoading(false)\n      subscribed && setDictionary(dictionary)\n    })\n\n    return () => {\n      subscribed = false\n    }\n  }, [word])\n\n  if (!dictionary) {\n    return null\n  }\n\n  return (\n    <div className='dictionary'>\n      <h6>Associations:</h6>\n      <ul>\n        {dictionary.assoc_word_ex && dictionary.assoc_word_ex.map((example, i) =>\n          <li key={i}>{example}</li>\n        )}\n      </ul>\n\n      <h6>Examples:</h6>\n      <ul>\n        {dictionary.example && dictionary.example.map((example, i) =>\n          <li key={i}>{example}</li>\n        )}\n      </ul>\n    </div>\n  )\n}\n\nexport default withAppContext(Dictionary)\n","import React, { useState, useEffect } from 'react'\nimport shuffle from '../../utils/shuffle'\nimport * as db from '../../db'\nimport Dictionary from '../Dictionary'\n\nconst getIds = words => words.map(({ _id }) => _id)\n\nconst ChallengeMode = ({ lang, length }) => {\n  const [words, setWords] = useState()\n  const [idsLeft, setIdsLeft] = useState([])\n  const [pointer, setPointer] = useState(0)\n  const [miss, setMiss] = useState(0)\n  const [visible, setVisible] = useState(false)\n\n  const makeProgress = async id => {\n    setWords([\n      ...words.map(word => word._id === id\n        ? {\n          ...word,\n          progress: {\n            ...word.progress,\n            [lang]: word.progress[lang] + 1,\n          },\n        }\n        : word\n      )\n    ])\n  }\n\n  const handleIKnow = () => {\n    const currentId = idsLeft[pointer]\n\n    setPointer(idsLeft.length >= pointer ? 0 : pointer)\n    setIdsLeft(idsLeft.filter(id => id !== currentId))\n    handleNext()\n    makeProgress(currentId)\n  }\n\n  const handleIDontKnow = () => {\n    setMiss(miss + 1)\n    setPointer(pointer + 1 < idsLeft.length ? pointer + 1 : 0)\n    handleNext()\n  }\n\n  const handleNext = () => {\n    setVisible(false)\n  }\n\n  const handleShow = async () => {\n    setVisible(true)\n  }\n\n  useEffect(() => {\n    (async () => {\n      const words = await db.getAll()\n\n      shuffle(words)\n\n      const wordsSliced = words.slice(0, length)\n      const ids = getIds(wordsSliced)\n\n      setIdsLeft(ids)\n      setWords(wordsSliced)\n    })()\n  }, [])\n\n  if(!words) {\n    return null\n  }\n\n  if (!idsLeft.length) {\n    return (\n      <div className=\"main\">\n        Challenge over!\n      </div>\n    )\n  }\n\n  const word = words.find(({ _id }) => _id === idsLeft[pointer])\n\n  return (\n    <div className=\"main\">\n      <div className='status'>miss: {miss}, words left: {idsLeft.length}</div>\n\n      <div className='words'>\n        <span>{word.hu}</span>\n\n        {visible && <>\n          -\n            <a target=\"_blank\" href={`https://translate.google.com/?source=osdd#auto|auto|${word.en}`}>\n            {word.en}\n          </a>\n        </>}\n      </div>\n\n      <div className='buttons'>\n        <button onClick={handleIKnow}>i know</button>\n        {visible && <button onClick={handleIDontKnow}>i don't know</button>}\n        {!visible && <button onClick={handleShow}>show</button>}\n      </div>\n\n      {visible && <Dictionary word={word} />}\n    </div>\n  )\n}\n\nexport default ChallengeMode\n","import React, { useState } from 'react'\nimport { useAsync } from 'react-async-hook'\nimport { GiphyFetch } from '@giphy/js-fetch-api'\nimport { Gif } from '@giphy/react-components'\nimport { withAppContext } from './App/AppContext'\n\nconst giphyFetch = new GiphyFetch(\"sXpGFDGZs0Dv1mmNFvYaGUvYwKX0PWIh\")\n\nconst Giphy = ({ word, appContext }) => {\n  const [gif, setGif] = useState()\n  const [gifs, setGifs] = useState()\n  const [change, setChange] = useState(false)\n\n  const searchGifs = ({ offset = 0, limit = 10 }) => giphyFetch.search(word.en, { offset, limit }).then(({ data }) => data)\n\n  const handleChangeClick = async () => {\n    setChange(true)\n    appContext.setLoading(true)\n    setGifs(await searchGifs({}))\n    appContext.setLoading(false)\n  }\n\n  const handleGifClick = data => {\n    console.log('gif clicked', data)\n  }\n\n  useAsync(async () => {\n    appContext.setLoading(true)\n\n    let data\n    const id = word.giphyId\n\n    if (id) {\n      data = (await giphyFetch.gif(id)).data\n    } else {\n      data = (await searchGifs({ limit: 1 }))[0]\n    }\n\n    appContext.setLoading(false)\n    setGif(data)\n  }, [])\n\n  return (\n    <div className='giphy'>\n      {gif && <Gif gif={gif} width={320} />}\n      {change\n        ? <div className='carousel'>\n          {gifs && gifs.map(({ id, images }) => <img key={id} src={images.fixed_height.webp} onClick={() => handleGifClick(id)} />)}\n        </div>\n        : <button onClick={handleChangeClick}>change</button>\n      }\n    </div>\n  )\n}\n\nexport default withAppContext(Giphy)\n","import React, { useState, useEffect } from 'react'\nimport shuffle from '../../utils/shuffle'\nimport * as db from '../../db'\nimport Dictionary from '../Dictionary'\nimport Giphy from '../Giphy'\n\nconst getIdsShuffeled = words => {\n  const ids = words.map(({ _id }) => _id)\n\n  shuffle(ids)\n\n  return ids\n}\n\nconst calculateLevel = ({ words, lang }) =>\n  words.reduce((level, { progress: { [lang]: progress } }) => Math.min(level, progress), Number.MAX_SAFE_INTEGER)\n\nconst FreeMode = ({ lang }) => {\n  const [words, setWords] = useState()\n  const [level, setLevel] = useState()\n  const [idsLeft, setIdsLeft] = useState([])\n  const [pointer, setPointer] = useState(0)\n  const [visible, setVisible] = useState(false)\n  const [dictionary, setDictionary] = useState(false)\n  const [giphy, setGiphy] = useState(false)\n\n  const makeProgress = async id => {\n    const word = await db.get(id)\n\n    word.progress[lang]++\n\n    await db.update(word)\n\n    const words = await db.getAll()\n\n    setWords(words)\n  }\n\n  const handleIKnow = () => {\n    const currentId = idsLeft[pointer]\n\n    setPointer(idsLeft.length >= pointer ? 0 : pointer)\n    setIdsLeft(idsLeft.filter(id => id !== currentId))\n    handleNext()\n    makeProgress(currentId)\n  }\n\n  const handleIDontKnow = () => {\n    const currentId = idsLeft[pointer]\n\n    setPointer(pointer + 1 < idsLeft.length ? pointer + 1 : 0)\n    setIdsLeft([\n      ...idsLeft.filter(id => id !== currentId),\n      currentId,\n    ])\n    handleNext()\n  }\n\n  const handleNext = () => {\n    setVisible(false)\n    setDictionary(false)\n    setGiphy(false)\n  }\n\n  const handleShow = () => {\n    setVisible(true)\n  }\n\n  const handleShowDictionary = () => {\n    setDictionary(true)\n  }\n\n  const handleShowGiphy = () => {\n    setGiphy(true)\n  }\n\n  useEffect(() => {\n    (async () => {\n      setWords(await db.getAll())\n    })()\n  }, [])\n\n  useEffect(() => {\n    words && setLevel(calculateLevel({ lang, words }))\n  }, [words])\n\n  useEffect(() => {\n    if (!words || idsLeft.length > 0) {\n      return\n    }\n\n    const ids = getIdsShuffeled(words.filter(({ progress: { [lang]: progress } }) => progress <= level))\n\n    setIdsLeft(ids)\n  }, [level])\n\n  if (!idsLeft.length) {\n    return null\n  }\n\n  const word = words.find(({ _id }) => _id === idsLeft[pointer])\n\n  return (\n    <div className=\"main\">\n      <div className='status'>level: {level + 1}, words left: {idsLeft.length}</div>\n\n      <div className='words'>\n        <span>{word.hu}</span>\n\n        {visible && <>\n          -\n            <a target=\"_blank\" href={`https://translate.google.com/?source=osdd#auto|auto|${word.en}`}>\n            {word.en}\n          </a>\n        </>}\n      </div>\n\n      <div className='buttons'>\n        <button onClick={handleIKnow}>i know</button>\n        {visible && <button onClick={handleIDontKnow}>i don't know</button>}\n        {!visible && <button onClick={handleShow}>show</button>}\n      </div>\n\n      <div className='buttons'>\n        <button onClick={handleShowGiphy}>show giphy</button>\n        <button onClick={handleShowDictionary}>show dictionary</button>\n      </div>\n\n      {giphy && <Giphy word={word} />}\n\n      {dictionary && <Dictionary word={word} />}\n    </div>\n  )\n}\n\nexport default FreeMode\n","import React, { useState, useEffect } from 'react'\nimport * as db from '../db'\n\nfunction debounce(callback, wait, immediate = false) {\n  let timeout = null\n\n  return function () {\n    const callNow = immediate && !timeout\n    const next = () => callback.apply(this, arguments)\n\n    clearTimeout(timeout)\n\n    if (callNow) {\n      return Promise.resolve(next())\n    }\n\n    return new Promise((resolve, reject) => {\n      if (timeout) {\n        reject()\n      }\n\n      timeout = setTimeout(() => {\n        timeout = null\n        resolve(next())\n      }, wait)\n    })\n  }\n}\n\nconst updateWord = async ({ id, ...rest }) => {\n  const word = await db.get(id)\n\n  await db.update({\n    ...word,\n    ...rest,\n  })\n\n  return db.getAll()\n}\n\nconst updateWordDebounced = debounce(updateWord, 1000)\n\nconst getWords = async () => (await db.getAll()).sort((a, b) => a.en > b.en ? 1 : -1)\n\nconst wordDefault = {\n  en: '',\n  hu: '',\n}\n\nconst WordsList = ({ filter: defaultFilter = '' }) => {\n  const [words, setWords] = useState()\n  const [word, setWord] = useState(wordDefault)\n  const [filter, setFilter] = useState(defaultFilter)\n\n  const handleFilterChange = ({ target }) => {\n    setFilter(target.value)\n  }\n\n  const handleAddClick = async () => {\n    const { id } = await db.create(word)\n\n    if (!word.en || !word.hu) {\n      return\n    }\n\n    setWords([\n      await db.get(id),\n      ...words,\n    ])\n    setWord(wordDefault)\n  }\n\n  const handleWordChange = lang => ({ target }) => {\n    setWord(({\n      ...word,\n      [lang]: target.value,\n    }))\n  }\n\n  const handleWordListChange = ({ id, lang }) => async ({ target }) => {\n    setWords([\n      ...words.map(word => word._id === id\n        ? {\n          ...word,\n          [lang]: target.value,\n        }\n        : word\n      )\n    ])\n\n    try {\n      const words = await updateWordDebounced({\n        id,\n        [lang]: target.value,\n      })\n\n      setWords(words)\n    } catch (e) { }\n  }\n\n  const handleRemoveClick = ({ id }) => async () => {\n    const word = await db.get(id)\n\n    await db.remove(word)\n    setWords(await getWords())\n  }\n\n  const filterWord = ({ en, hu }) => en.indexOf(filter) > -1 || hu.indexOf(filter) > -1\n\n  useEffect(() => {\n    (async () => {\n      setWords(await getWords())\n    })()\n  }, [])\n\n  return (\n    <div className='word-list'>\n      <input type='text' value={filter} onChange={handleFilterChange} />\n\n      <ol>\n        <li>\n          <input type='text' value={word.en} onChange={handleWordChange('en')} />\n          <input type='text' value={word.hu} onChange={handleWordChange('hu')} />\n          <button onClick={handleAddClick}>add</button>\n        </li>\n\n        {words && words.filter(filterWord).map(({ _id, en, hu }) =>\n          <li key={_id}>\n            <input type='text' value={en} onChange={handleWordListChange(({ id: _id, lang: 'en' }))} />\n            <input type='text' value={hu} onChange={handleWordListChange(({ id: _id, lang: 'hu' }))} />\n            <button onClick={handleRemoveClick(({ id: _id }))}>remove</button>\n          </li>\n        )}\n      </ol>\n    </div>\n  )\n}\n\nexport default WordsList\n","import React, { useState, useRef } from 'react'\nimport { Link, Router } from '@reach/router'\nimport Papa from 'papaparse'\nimport readFile from '../../utils/readFileInput'\nimport * as db from '../../db'\nimport { FreeMode, ChallengeMode } from '../Mode'\nimport WordsList from '../WordsList'\nimport AppContext from './AppContext'\nimport './App.css'\n\nconst rebuildWords = async words => {\n  console.log('truncating words...')\n\n  await db.truncate()\n\n  console.log('rebuilding words...')\n\n  const tasks = words.map(word => db.create({\n    en: word.Angol,\n    hu: word.Magyar,\n  }))\n\n  await Promise.all(tasks)\n\n  console.log('done!')\n}\n\nconst WordsRebuild = ({ onDone }) => {\n  const file = useRef(null)\n\n  const handleClick = () => {\n    file.current.click()\n  }\n\n  const handleSelect = async ({ target }) => {\n    const file = target.files[0]\n\n    if (!file) {\n      return\n    }\n\n    const content = await readFile(file)\n    const { data: words } = Papa.parse(content, {\n      header: true,\n    })\n\n    rebuildWords(words)\n    // onDone()\n  }\n\n  return (\n    <div className=\"words-rebuild\">\n      <input ref={file} onChange={handleSelect} type='file' />\n      <button onClick={handleClick}>rebuild words</button>\n    </div>\n  )\n}\n\nconst Home = ({ }) => {\n  return (\n    <nav className='nav'>\n      <Link to='/free'>free</Link>\n      <Link to='/challenge/10'>10-challenge</Link>\n      <Link to='/challenge/25'>25-challenge</Link>\n      <Link to='/challenge/50'>50-challenge</Link>\n      <Link to='/words'>words list</Link>\n\n      <WordsRebuild />\n    </nav>\n  )\n}\n\nfunction App() {\n  const lang = 'en'\n  const [loading, setLoading] = useState(false)\n\n  return (\n    <div className=\"App\">\n      <AppContext.Provider value={{ loading, setLoading }}>\n        <header className=\"App-header\">\n          <Link to='/'>home</Link>\n\n          <span>wordybirdy</span>\n        </header>\n\n        <main>\n          <Router basename='/wordybirdy'>\n            <Home path='/' />\n            <FreeMode lang={lang} path='/free' />\n            <ChallengeMode lang={lang} path='/challenge/:length' />\n            <WordsList path='/words' />\n          </Router>\n\n          {loading && <div><h5>Loading...</h5></div>}\n        </main>\n      </AppContext.Provider>\n    </div>\n  )\n}\n\nexport default App\n","import App from './App.js'\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","function webpackEmptyContext(req) {\n\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\te.code = 'MODULE_NOT_FOUND';\n\tthrow e;\n}\nwebpackEmptyContext.keys = function() { return []; };\nwebpackEmptyContext.resolve = webpackEmptyContext;\nmodule.exports = webpackEmptyContext;\nwebpackEmptyContext.id = 86;"],"sourceRoot":""}